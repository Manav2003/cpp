/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int count=0;
    pair<int , int> solve(TreeNode* root)
    {
        if(!root)
        return {0,0};
        auto ls = solve(root->left);
        auto rs = solve(root->right);
        int sum = ls.first+rs.first+root->val;
        int ccount=ls.second+rs.second+1;
        if(root->val == (sum/ccount))
        count++;
        return {sum,ccount};
    }
    int averageOfSubtree(TreeNode* root) {
        solve(root);
        return count;
    }
};
